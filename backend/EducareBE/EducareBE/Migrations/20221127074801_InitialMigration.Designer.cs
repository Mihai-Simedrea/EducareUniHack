// <auto-generated />
using System;
using EducareBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducareBE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221127074801_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EducareBE.Models.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FieldId = 2,
                            IsFavorite = false,
                            Name = "POO",
                            Year = 2
                        },
                        new
                        {
                            Id = 2,
                            FieldId = 2,
                            IsFavorite = false,
                            Name = "SDA",
                            Year = 2
                        },
                        new
                        {
                            Id = 3,
                            FieldId = 2,
                            IsFavorite = false,
                            Name = "PTDM",
                            Year = 4
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.EnrolledCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEnrolled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFavoirte")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("EnrolledCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            IsEnrolled = true,
                            IsFavoirte = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            IsEnrolled = true,
                            IsFavoirte = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            IsEnrolled = false,
                            IsFavoirte = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Automation And Computers",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Electronics and Telecomunication",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Faculty Of Managemen And Transportation ",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Faculty of Mechanical Engineerin",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Faculty of Finance and Banking",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Automation And Computers",
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Electronics and Telecomunication",
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Faculty Of Managemen And Transportation ",
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Faculty of Mechanical Engineerin",
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Faculty of Finance and Banking",
                            UniversityId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Automation And Computers",
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 12,
                            Name = "Electronics and Telecomunication",
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 13,
                            Name = "Faculty Of Management And Transportation ",
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 14,
                            Name = "Faculty of Mechanical Engineerin",
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 15,
                            Name = "Faculty of Finance and Banking",
                            UniversityId = 6
                        },
                        new
                        {
                            Id = 16,
                            Name = "Faculty Of Mathemathics",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 17,
                            Name = "Faculty of Biology",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 18,
                            Name = "Faculty Of Managemen And Transportation ",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Faculty of Mechanical Engineerin",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 20,
                            Name = "Faculty of Finance and Banking",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 21,
                            Name = "Faculty of General Medicine",
                            UniversityId = 7
                        },
                        new
                        {
                            Id = 22,
                            Name = "Faculty of Dental Medicine",
                            UniversityId = 7
                        },
                        new
                        {
                            Id = 23,
                            Name = "Faculty of Chirurgy",
                            UniversityId = 7
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacultyId = 1,
                            Name = "Informatics"
                        },
                        new
                        {
                            Id = 2,
                            FacultyId = 1,
                            Name = "Computers and Information Technology"
                        },
                        new
                        {
                            Id = 3,
                            FacultyId = 1,
                            Name = "System Engineering"
                        },
                        new
                        {
                            Id = 4,
                            FacultyId = 2,
                            Name = "Telecomunications"
                        },
                        new
                        {
                            Id = 5,
                            FacultyId = 3,
                            Name = "Transporting Engineering"
                        },
                        new
                        {
                            Id = 6,
                            FacultyId = 4,
                            Name = "Management Engineering"
                        },
                        new
                        {
                            Id = 7,
                            FacultyId = 5,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 8,
                            FacultyId = 5,
                            Name = "Bussiness"
                        },
                        new
                        {
                            Id = 9,
                            FacultyId = 5,
                            Name = "Banking"
                        },
                        new
                        {
                            Id = 10,
                            FacultyId = 1,
                            Name = "Informatics"
                        },
                        new
                        {
                            Id = 11,
                            FacultyId = 1,
                            Name = "Computers and Information Technology"
                        },
                        new
                        {
                            Id = 12,
                            FacultyId = 2,
                            Name = "Informatics"
                        },
                        new
                        {
                            Id = 13,
                            FacultyId = 21,
                            Name = "General Medicine"
                        },
                        new
                        {
                            Id = 14,
                            FacultyId = 22,
                            Name = "Dental Medicine"
                        },
                        new
                        {
                            Id = 15,
                            FacultyId = 23,
                            Name = "Chirurgy"
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DislikesCount")
                        .HasColumnType("int");

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<int>("SubjectAddedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectAddedById");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 1,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            DislikesCount = 1,
                            LikesCount = 0,
                            SubjectAddedById = 1,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            DislikesCount = 0,
                            LikesCount = 0,
                            SubjectAddedById = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 17,
                            DislikesCount = 0,
                            LikesCount = 1,
                            SubjectAddedById = 2,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPosts")
                        .HasColumnType("int");

                    b.Property<int>("StudyYear")
                        .HasColumnType("int");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Objects and Classes"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Name = "Polymorphism"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Name = "Errors"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            Name = "Sorting Algorims"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            Name = "Advanced sorting algoritms"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            Name = "The Oscilloscope"
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.SubjectAddedBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SubjectsAddedBy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Definition",
                            SubjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lab Example",
                            SubjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Coruse Example",
                            SubjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Definition",
                            SubjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Lab Example",
                            SubjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Coruse Example",
                            SubjectId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalExercices")
                        .HasColumnType("int");

                    b.Property<int>("TotalFields")
                        .HasColumnType("int");

                    b.Property<int>("TotalSubjects")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Polytechnic University of Timisoara",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vest University of Timisoara",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Standford University",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Polytechnic University of Bucharest",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Polytechnic University of Iasi",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Carol Davila University of Medicine",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "University of Medicine and Pharmacy of Craiova",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 9,
                            Name = "Lucian Blaga University of Sibiu",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        },
                        new
                        {
                            Id = 10,
                            Name = "Massachusetts Institute of Technology",
                            TotalExercices = 0,
                            TotalFields = 0,
                            TotalSubjects = 0
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jhon.smith@student.upt.ro",
                            Password = "password",
                            UserName = "johnny47"
                        },
                        new
                        {
                            Id = 2,
                            Email = "makhur.khena@student.upt.ro",
                            Password = "password",
                            UserName = "makhur.khena"
                        },
                        new
                        {
                            Id = 3,
                            Email = "zaya.del@student.upt.ro",
                            Password = "password",
                            UserName = "zayaTheBest"
                        },
                        new
                        {
                            Id = 4,
                            Email = "gerdi.ninkhafk@student.upt.ro",
                            Password = "password",
                            UserName = "ninkhafk99"
                        },
                        new
                        {
                            Id = 5,
                            Email = "rhiannon.bovun@student.upt.ro",
                            Password = "password",
                            UserName = "bovun2003"
                        },
                        new
                        {
                            Id = 6,
                            Email = "rol.khihrerl@student.upt.ro",
                            Password = "password",
                            UserName = "khihrerl007"
                        },
                        new
                        {
                            Id = 7,
                            Email = "shepard.hanni@student.upt.ro",
                            Password = "password",
                            UserName = "hanni_"
                        },
                        new
                        {
                            Id = 8,
                            Email = "buiron.tin@student.mit.us",
                            Password = "password",
                            UserName = "tin77"
                        },
                        new
                        {
                            Id = 9,
                            Email = "rell.findazrum@student.lca.de",
                            Password = "password",
                            UserName = "rell_findar1"
                        },
                        new
                        {
                            Id = 10,
                            Email = "xandra.tiang@student.upt.ro",
                            Password = "password",
                            UserName = "alexandra"
                        },
                        new
                        {
                            Id = 11,
                            Email = "andrew.techel@student.upt.ro",
                            Password = "password",
                            UserName = "andreeew"
                        },
                        new
                        {
                            Id = 12,
                            Email = "gustavo.del@student.upt.ro",
                            Password = "password",
                            UserName = "gustavo412"
                        });
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Course", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.Field", "Field")
                        .WithMany("Courses")
                        .HasForeignKey("FieldId");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.EnrolledCourses", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.Course", "Course")
                        .WithMany("EnrolledCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducareBE.Models.Entities.User", "User")
                        .WithMany("EnrolledCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Faculty", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId");

                    b.Navigation("University");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Field", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.Faculty", "Faculty")
                        .WithMany("Fields")
                        .HasForeignKey("FacultyId");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Like", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.SubjectAddedBy", "SubjectAddedBy")
                        .WithMany("Likes")
                        .HasForeignKey("SubjectAddedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducareBE.Models.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SubjectAddedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Profile", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("EducareBE.Models.Entities.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Subject", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.SubjectAddedBy", b =>
                {
                    b.HasOne("EducareBE.Models.Entities.Subject", "Subject")
                        .WithMany("SubjectsAddedBy")
                        .HasForeignKey("SubjectId");

                    b.HasOne("EducareBE.Models.Entities.User", "User")
                        .WithMany("SubjectsAddedBy")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Course", b =>
                {
                    b.Navigation("EnrolledCourses");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Faculty", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Field", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.Subject", b =>
                {
                    b.Navigation("SubjectsAddedBy");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.SubjectAddedBy", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.University", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("EducareBE.Models.Entities.User", b =>
                {
                    b.Navigation("EnrolledCourses");

                    b.Navigation("Likes");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("SubjectsAddedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
